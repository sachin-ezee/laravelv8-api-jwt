## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Managment'
description: |-

  Apis Manage User login, Register and Authenticate
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Login User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: mschulist@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 50 characters.'
        required: true
        example: ''
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Register User'
      description: 'Register New User'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: non
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: sporer.shirley@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 50 characters.'
        required: true
        example: owbhno
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      title: 'Logout User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: cum
        type: string
        custom: []
    responses:
      -
        status: 401
        content: '{"error":true,"message":"Invalid token"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/get_user
    metadata:
      title: 'Get Login User Details using token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'for get response'
        required: true
        example: ipsa
        type: string
        custom: []
    responses:
      -
        status: 401
        content: '{"error":true,"message":"Invalid token"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
