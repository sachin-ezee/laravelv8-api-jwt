openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/products:
    get:
      summary: 'Display All Products.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Invalid token'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Invalid token'
      tags:
        - Products
  '/api/products/{id}':
    get:
      summary: 'Display the specified Product.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Invalid token'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Invalid token'
      tags:
        - Products
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/products/create:
    post:
      summary: 'Store a newly created Product.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                sku:
                  type: string
                  description: ''
                  example: quasi
                price:
                  type: string
                  description: ''
                  example: et
                quantity:
                  type: string
                  description: ''
                  example: omnis
              required:
                - name
                - sku
                - price
                - quantity
  '/api/products/update/{id}':
    put:
      summary: 'Update the specified resource in product.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: numquam
                sku:
                  type: string
                  description: ''
                  example: illo
                price:
                  type: string
                  description: ''
                  example: delectus
                quantity:
                  type: string
                  description: ''
                  example: sequi
              required:
                - name
                - sku
                - price
                - quantity
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/products/delete/{id}':
    delete:
      summary: 'Remove the specified product from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Products
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete.'
        example: 3
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: 'Login User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User Managment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mschulist@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 50 characters.'
                  example: ''
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: 'Register User'
      description: 'Register New User'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User Managment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: non
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sporer.shirley@example.org
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 50 characters.'
                  example: owbhno
              required:
                - name
                - email
                - password
      security: []
  /api/logout:
    get:
      summary: 'Logout User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Invalid token'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Invalid token'
      tags:
        - 'User Managment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: cum
              required:
                - token
      security: []
  /api/get_user:
    get:
      summary: 'Get Login User Details using token'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Invalid token'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Invalid token'
      tags:
        - 'User Managment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'for get response'
                  example: ipsa
              required:
                - token
      security: []
tags:
  -
    name: Products
    description: ''
  -
    name: 'User Managment'
    description: "\nApis Manage User login, Register and Authenticate"
